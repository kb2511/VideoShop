@model ProductVM

@{
    ViewData["Title"] = (Model.Product.Id != 0 ? "Update" : "Create") + " Product";
}

<div class="container">
    <div class="card shadow border-0 my-4">
        <div class="card-header bg-secondary bg-gradient ml-0 py-3 text-center">
                    <h2 class="text-white py-2"> @(Model.Product.Id != 0 ? "Update" : "Create") Product</h2>
        </div>
        <div class="card-body p-4">
            <form method="post" class="row" enctype="multipart/form-data">
                <input asp-for="Product.Id" hidden />
                <div class="row">
                    <div class="col-10">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="border p-3">
                            <div class="form-group mb-3">
                                <label asp-for="Product.Title" class="control-label"></label>
                                <input asp-for="Product.Title" class="form-control" />
                                <span asp-validation-for="Product.Title" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <label asp-for="Product.Description" class="control-label"></label>
                                <textarea asp-for="Product.Description" class="form-control"></textarea>
                            </div>
                            <div class="form-group mb-3">
                                <label asp-for="Product.Duration" class="control-label"></label>
                                <input asp-for="Product.Duration" class="form-control" />
                                <span asp-validation-for="Product.Duration" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <label asp-for="Product.YearOfRelease" class="control-label"></label>
                                <input asp-for="Product.YearOfRelease" class="form-control" />
                                <span asp-validation-for="Product.YearOfRelease" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <label asp-for="Product.ListPrice" class="control-label"></label>
                                <input asp-for="Product.ListPrice" class="form-control" />
                                <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <label asp-for="Product.Price" class="control-label"></label>
                                <input asp-for="Product.Price" class="form-control" />
                                <span asp-validation-for="Product.Price" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <label asp-for="Product.PriceMoreThan3" class="control-label"></label>
                                <input asp-for="Product.PriceMoreThan3" class="form-control" />
                                <span asp-validation-for="Product.PriceMoreThan3" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <label asp-for="Product.PriceMoreThan10" class="control-label"></label>
                                <input asp-for="Product.PriceMoreThan10" class="form-control" />
                                <span asp-validation-for="Product.PriceMoreThan10" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <label asp-for="Product.CategoryId" class="control-label"></label>
                                <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select">
                                    <option disabled selected>--Select Category--</option>
                                </select>
                                <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <label asp-for="Product.ProductImages" class="ms-2"></label>
                                <input type="file" name="files" class="form-control mb-3" multiple />
                            </div>
                            <div class="form-group mb-3">
                                @if (Model.Product.Id != 0)
                                {
                                    <input type="submit" value="Edit" class="btn btn-primary" style="width:150px" />
                                }
                                else
                                {
                                    <input type="submit" value="Create" class="btn btn-primary" style="width:150px" />
                                }
                                <a asp-controller="Product" asp-action="Index" class="btn btn-secondary" style="width:150px">Back to List</a>
                            </div>
                        </div>
                    </div>
                    <div class="col-2">
                        @if (Model.Product.ProductImages != null)
                        {
                            foreach (var image in Model.Product.ProductImages)
                            {
                                <div class="border p-1 m-2 text-center">
                                    <img src="@image.ImageUrl" width="100%"
                                         style="border-radius:5px; border:1px solid #bbb9b9" />
                                    <a asp-action="DeleteImage" class="btn btn-danger" asp-route-imageId="@image.Id">
                                        <i class="bi bi-trash-fill"></i> Delete
                                    </a>
                                </div>
                            }
                        }
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'anchor autolink charmap codesample emoticons lists table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
